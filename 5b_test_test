import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import LoginForm from './LoginForm';

test('renders email and password inputs', () => {
  render(<LoginForm />);
  expect(screen.getByPlaceholderText(/Email/i)).toBeInTheDocument(); // 🔁 This will now fail
  expect(screen.getByPlaceholderText(/Password/i)).toBeInTheDocument();
});

test('shows errors on empty submit', () => {
  render(<LoginForm />);
  fireEvent.click(screen.getByRole('button', { name: /Login/i }));
  expect(screen.getByText(/Email is required/i)).toBeInTheDocument();
  expect(screen.getByText(/Password is required/i)).toBeInTheDocument();
});

test('shows error on invalid email format', () => {
  render(<LoginForm />);
  fireEvent.change(screen.getByPlaceholderText(/Email/i), {
    target: { value: 'invalid-email' },
  });
  fireEvent.change(screen.getByPlaceholderText(/Password/i), {
    target: { value: 'password123' },
  });
  fireEvent.click(screen.getByRole('button', { name: /Login/i }));

  expect(screen.getByText(/Enter a valid email address/i)).toBeInTheDocument();
});

test('submits form with valid inputs and shows success message', () => {
  render(<LoginForm />);
  fireEvent.change(screen.getByPlaceholderText(/Email/i), {
    target: { value: 'test@example.com' },
  });
  fireEvent.change(screen.getByPlaceholderText(/Password/i), {
    target: { value: 'password123' },
  });
  fireEvent.click(screen.getByRole('button', { name: /Login/i }));

  expect(screen.queryByText(/Email is required/i)).not.toBeInTheDocument();
  expect(screen.queryByText(/Password is required/i)).not.toBeInTheDocument();
  expect(screen.queryByText(/Enter a valid email address/i)).not.toBeInTheDocument();
  expect(screen.getByText(/Login successful!/i)).toBeInTheDocument();
});
