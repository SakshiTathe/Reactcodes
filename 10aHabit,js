*************(tabs)index.tsx**********************
import { Stack } from 'expo-router';
import React from 'react';
import { View } from 'react-native';
import MainScreen from '../MainScreen';

export default function Index() {
  return (
    <>
      <Stack.Screen options={{ title: 'Daily Habits' }} />
      <View style={{ flex: 1 }}>
        <MainScreen />
      </View>
    </>
  );
}
*************************Habbitpage 
import React, { useCallback } from 'react';
import { View, FlatList } from 'react-native';
import HabitItem from '../components/HabitItem';

const HabitList = ({ habits, toggleHabit }) => {
  const renderItem = useCallback(
    ({ item }) => <HabitItem habit={item} onToggle={toggleHabit} />,
    [toggleHabit]
  );

  return (
    <View>
      <FlatList
        data={habits}
        renderItem={renderItem}
        keyExtractor={(item) => item.id.toString()}
      />
    </View>
  );
};

export default HabitList;
************************************************************************
MainScreen.tsx
Main Screen
import React, { useState, useCallback } from 'react';
import { View, Text, StyleSheet } from 'react-native';
import HabitList from './HabitList';

const MainScreen = () => {
  const [habits, setHabits] = useState([
    { id: 1, name: 'Meditate', completed: false },
    { id: 2, name: 'Exercise', completed: false },
    { id: 3, name: 'Read', completed: false },
  ]);

  const toggleHabit = useCallback((id: number) => {
    setHabits((prevHabits) =>
      prevHabits.map((habit) =>
        habit.id === id ? { ...habit, completed: !habit.completed } : habit
      )
    );
  }, []);

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Daily Habits</Text>
      <HabitList habits={habits} toggleHabit={toggleHabit} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    padding: 16,
    paddingTop: 50,
    flex: 1,
    backgroundColor: 'white',
  },
  title: {
    fontSize: 26,
    fontWeight: 'bold',
    marginBottom: 20,
  },
});

export default MainScreen;
